CREATE TABLE ISSUESLISTS
(
    ID   SERIAL PRIMARY KEY,
    NAME   VARCHAR(100)
);

CREATE TABLE ISSUES
(
    ID  SERIAL PRIMARY KEY,
    ISSUESLIST_ID  BIGINT UNSIGNED NOT NULL,
    SUMMARY   VARCHAR(100),
    DESCRIPTION VARCHAR(1024),
    USER_ID_ASSIGNEDTO BIGINT UNSIGNED NOT NULL,
    FOREIGN KEY (ISSUESLIST_ID) REFERENCES ISSUESLISTS(ID),
    FOREIGN KEY (USER_ID_ASSIGNEDTO) REFERENCES USERS(ID)
);

INSERT INTO ISSUESLISTS (NAME)
VALUES ('ToDo');

INSERT INTO ISSUESLISTS (NAME)
VALUES ('In progress');

INSERT INTO ISSUESLISTS (NAME)
VALUES ('Done');

COMMIT;

SELECT * FROM ISSUESLISTS;

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (1, 'Optimize searching', 'Archive data searching has to be optimized', 2);

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (1, 'Own logger', 'Refactor company logger to meet our needs', 1);

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (2, 'Page loading', 'Gif dessign for page loading', 3);

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (2, 'Bug', 'Going through the bug report list', 4);

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (3, 'Monthly', 'Make monthly raport', 5);

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (1, 'New Campaign', 'create presentations about a new campaign', 5);

COMMIT;

SELECT * FROM ISSUES;